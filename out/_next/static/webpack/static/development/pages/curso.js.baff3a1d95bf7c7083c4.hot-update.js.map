{"version":3,"file":"static/webpack/static\\development\\pages\\curso.js.baff3a1d95bf7c7083c4.hot-update.js","sources":["webpack:///./components/common/SearchBar.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchIcon from '../../static/icons/search.svg';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\nconst SearchInput = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  input {\r\n    width: 100%;\r\n    width: -webkit-fill-available;\r\n    padding: 7px 15px;\r\n    padding-right: 45px;\r\n    background: #ffffff1a;\r\n    border: 1px solid #ffffff26;\r\n    border-radius: 3px;\r\n    color: #fff;\r\n  }\r\n\r\n  input::placeholder {\r\n    color: #ffffff9c;\r\n  }\r\n\r\n  input:focus,\r\n  input:active {\r\n    box-shadow: 0;\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nconst IconHolder = styled.div`\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 15px;\r\n  height: 15px;\r\n  svg {\r\n    fill: #fff;\r\n  }\r\n  :before {\r\n    content: '';\r\n    position: absolute;\r\n    z-index: 2;\r\n    height: 90%;\r\n    left: -15px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    border-left: 1px solid #ffffff9c;\r\n  }\r\n`;\r\n\r\nconst SearchPanelWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 3;\r\n  background: #161a31;\r\n  width: 100%;\r\n  transform: translateY(100%);\r\n`;\r\n\r\nconst SearchPanelItem = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: '',\r\n      result: []\r\n    };\r\n  }\r\n\r\n  SearchPanel = () => {\r\n    if (this.state.searchText.length > 3) {\r\n      return <SearchPanelWrapper>\r\n        {this.state.result.map(res => {\r\n          return (<SearchPanelItem key={res.id}>{res.nome}</SearchPanelItem>)\r\n        })}\r\n      </SearchPanelWrapper>;\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ searchText: event.target.value });\r\n    this.setState({ result: _.filter(this.props.cursesList, (o) => { return _.includes(o.nome, this.state.searchText) }) })  \r\n  }\r\n\r\n  render() {\r\n    console.log(\"1\",this.state.result);\r\n    return (\r\n      <SearchInput>\r\n        <IconHolder>\r\n          <SearchIcon />\r\n        </IconHolder>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Busque seu curso...\"\r\n          onChange={this.handleChange}\r\n        />\r\n        {this.SearchPanel()}\r\n      </SearchInput>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cursesList: state.sanarflixReducer.cursesList,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchBar);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;;;;;;;;;AAAA;;;;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAyBA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAjBA;AAmBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AApBA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAgBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAvCA;AACA;AAyCA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;A","sourceRoot":""}