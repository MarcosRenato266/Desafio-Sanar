{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.532cbdfa4ded1ec3c34b.hot-update.js","sources":["webpack:///./components/HomeScene/SlidersFeed.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Carousel } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport ArrowIcon from '../../static/icons/arrow.svg';\r\nimport { Skeleton } from 'antd';\r\n\r\nconst FeedWrapper = styled.div`\r\n  padding-top: 40px;\r\n  .slick-slide {\r\n    padding: 0px 10px;\r\n  }\r\n`;\r\n\r\nconst SliderHolder = styled.div`\r\n  margin-bottom: 40px;\r\n  h1 {\r\n    font-size: 30px;\r\n    color: #484f52;\r\n    font-weight: 300;\r\n    margin-left: 5vw;\r\n  }\r\n  .slick-list {\r\n    padding-left: 5vw;\r\n  }\r\n`;\r\n\r\nconst CarouselHeight = styled.div`\r\n  position relative;\r\n`;\r\n\r\nconst CarouselRow = styled.div`\r\n  width: 100%;\r\n  height: 200px;\r\n  background: ${props =>\r\n    !props.background\r\n      ? `url('${props.background}')no-repeat center center / cover`\r\n      : '#000'};\r\n  border-radius: 5px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: flex-start;\r\n  padding: 15px;\r\n  span {\r\n    color: #fff;\r\n    font-size: 18px;\r\n    max-width: 80%;\r\n  }\r\n`;\r\n\r\nconst PrevButton = styled.div`\r\n  height: 100%;\r\n  width: 5%;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 2;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(255, 255, 255, 1);\r\n  background: -moz-linear-gradient(\r\n    left,\r\n    rgba(255, 255, 255, 0.4) 0%,\r\n    rgba(255, 255, 255, 0) 100%\r\n  );\r\n  background: -webkit-gradient(\r\n    left top,\r\n    right top,\r\n    color-stop(0%, rgba(255, 255, 255, 1)),\r\n    color-stop(100%, rgba(255, 255, 255, 0))\r\n  );\r\n  background: -webkit-linear-gradient(\r\n    left,\r\n    rgba(255, 255, 255, 0.4) 0%,\r\n    rgba(255, 255, 255, 0) 100%\r\n  );\r\n  background: -o-linear-gradient(\r\n    left,\r\n    rgba(255, 255, 255, 0.4) 0%,\r\n    rgba(255, 255, 255, 0) 100%\r\n  );\r\n  background: -ms-linear-gradient(\r\n    left,\r\n    rgba(255, 255, 255, 0.4) 0%,\r\n    rgba(255, 255, 255, 0) 100%\r\n  );\r\n  background: linear-gradient(\r\n    to right,\r\n    rgba(255, 255, 255, 0.4) 0%,\r\n    rgba(255, 255, 255, 0) 100%\r\n  );\r\n  svg {\r\n    fill: #100b23;\r\n    width: 20px;\r\n    height: 20px;\r\n    transform: rotate(180deg);\r\n  }\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst NextButton = styled.div`\r\n  height: 100%;\r\n  width: 5%;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  z-index: 2;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(255, 255, 255, 1);\r\n  background: -moz-linear-gradient(\r\n    left,\r\n    rgba(255, 255, 255, 0) 0%,\r\n    rgba(255, 255, 255, 0.4) 100%\r\n  );\r\n  background: -webkit-gradient(\r\n    left top,\r\n    right top,\r\n    color-stop(0%, rgba(255, 255, 255, 1)),\r\n    color-stop(100%, rgba(255, 255, 255, 0.4))\r\n  );\r\n  background: -webkit-linear-gradient(\r\n    left,\r\n    rgba(255, 255, 255, 0) 0%,\r\n    rgba(255, 255, 255, 0.4) 100%\r\n  );\r\n  background: -o-linear-gradient(\r\n    left,\r\n    rgba(255, 255, 255, 0) 0%,\r\n    rgba(255, 255, 255, 0.4) 100%\r\n  );\r\n  background: -ms-linear-gradient(\r\n    left,\r\n    rgba(255, 255, 255, 0) 0%,\r\n    rgba(255, 255, 255, 0.4) 100%\r\n  );\r\n  background: linear-gradient(\r\n    to right,\r\n    rgba(255, 255, 255, 0) 0%,\r\n    rgba(255, 255, 255, 0.4) 100%\r\n  );\r\n  svg {\r\n    fill: #100b23;\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nclass SlidersFeed extends Component {\r\n  resolveCursesList = (item, index) => {\r\n    return (\r\n      <CarouselRow background={item.imagem}>\r\n        <span>{item.nome}</span>\r\n      </CarouselRow>\r\n    );\r\n  };\r\n\r\n  RowScroll = (action, carousel) => {\r\n    switch (carousel) {\r\n      case 'curses':\r\n        action === 'Next'\r\n          ? this.refs.cursesRef.slick.slickNext()\r\n          : this.refs.cursesRef.slick.slickPrev();\r\n        break;\r\n      case 'seen':\r\n        action === 'Next'\r\n          ? this.refs.seenRef.slick.slickNext()\r\n          : this.refs.seenRef.slick.slickPrev();\r\n        break;\r\n      case 'news':\r\n        action === 'Next'\r\n          ? this.refs.newsRef.slick.slickNext()\r\n          : this.refs.newsRef.slick.slickPrev();\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FeedWrapper>\r\n        <SliderHolder>\r\n          <h1>Cursos</h1>\r\n          <CarouselHeight>\r\n            <Carousel\r\n              slidesToShow={5}\r\n              slidesToScroll={5}\r\n              infinite={false}\r\n              ref=\"cursesRef\"\r\n              dots={false}\r\n              draggable\r\n            >\r\n              {this.props.cursesList &&\r\n                this.props.cursesList.map((item, index) => (\r\n                  <div key={key}>{this.resolveCursesList(item, index)}</div>\r\n                ))}\r\n            </Carousel>\r\n            <PrevButton onClick={() => this.RowScroll('Prev', 'curses')}>\r\n              <ArrowIcon />\r\n            </PrevButton>\r\n            <NextButton onClick={() => this.RowScroll('Next', 'curses')}>\r\n              <ArrowIcon />\r\n            </NextButton>\r\n          </CarouselHeight>\r\n        </SliderHolder>\r\n        <SliderHolder>\r\n          <h1>Mais Vistos</h1>\r\n          <CarouselHeight>\r\n            <Carousel\r\n              slidesToShow={5}\r\n              slidesToScroll={5}\r\n              infinite={false}\r\n              ref=\"seenRef\"\r\n              dots={false}\r\n              draggable\r\n            >\r\n              {this.props.cursesList &&\r\n                this.props.cursesList.map((item, index) => (\r\n                  <>{this.resolveCursesList(item, index)}</>\r\n                ))}\r\n            </Carousel>\r\n            <PrevButton onClick={() => this.RowScroll('Prev', 'seen')}>\r\n              <ArrowIcon />\r\n            </PrevButton>\r\n            <NextButton onClick={() => this.RowScroll('Next', 'seen')}>\r\n              <ArrowIcon />\r\n            </NextButton>\r\n          </CarouselHeight>\r\n        </SliderHolder>\r\n        <SliderHolder>\r\n          <h1>Novidades</h1>\r\n          <CarouselHeight>\r\n            <Carousel\r\n              slidesToShow={5}\r\n              slidesToScroll={5}\r\n              infinite={false}\r\n              ref=\"newsRef\"\r\n              dots={false}\r\n              draggable\r\n            >\r\n              {this.props.cursesList &&\r\n                this.props.cursesList.map((item, index) => (\r\n                  <>{this.resolveCursesList(item, index)}</>\r\n                ))}\r\n            </Carousel>\r\n            <PrevButton onClick={() => this.RowScroll('Prev', 'news')}>\r\n              <ArrowIcon />\r\n            </PrevButton>\r\n            <NextButton onClick={() => this.RowScroll('Next', 'news')}>\r\n              <ArrowIcon />\r\n            </NextButton>\r\n          </CarouselHeight>\r\n        </SliderHolder>\r\n      </FeedWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cursesList: state.sanarflixReducer.cursesList,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SlidersFeed);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAAA;;;;;;;;;AAAA;;;;AAGA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAGA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAoDA;AAAA;AAAA;AAAA;AACA;AAmDA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AAfA;AAiBA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA1GA;AACA;AA4GA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;A","sourceRoot":""}